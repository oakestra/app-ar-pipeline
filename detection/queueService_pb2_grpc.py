# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import queueService_pb2 as queueService__pb2


class QueueServiceStub(object):
    """The service definition exposed by the AR application.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.NextFrame = channel.unary_unary(
                '/QueueService/NextFrame',
                request_serializer=queueService__pb2.Frame.SerializeToString,
                response_deserializer=queueService__pb2.Frame.FromString,
                )


class QueueServiceServicer(object):
    """The service definition exposed by the AR application.
    """

    def NextFrame(self, request, context):
        """NextFrame send the next frame
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QueueServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'NextFrame': grpc.unary_unary_rpc_method_handler(
                    servicer.NextFrame,
                    request_deserializer=queueService__pb2.Frame.FromString,
                    response_serializer=queueService__pb2.Frame.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'QueueService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class QueueService(object):
    """The service definition exposed by the AR application.
    """

    @staticmethod
    def NextFrame(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/QueueService/NextFrame',
            queueService__pb2.Frame.SerializeToString,
            queueService__pb2.Frame.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
